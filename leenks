https://www.quora.com/How-does-Siri-work-in-terms-of-algorithms

https://www.google.com/search?q=automatic+faq+answering+application&oq=automatic+faq+answering+application&aqs=chrome..69i57.12607j0j7&sourceid=chrome&es_sm=122&ie=UTF-8

http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.12.7325&rep=rep1&type=pdf

http://people.dsv.su.se/~eriks/faq-answering-self-service.pdf

https://www.google.com/search?q=FAQfinder&oq=FAQfinder&aqs=chrome..69i57.2048j0j7&sourceid=chrome&es_sm=122&ie=UTF-8

http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.37.4384&rep=rep1&type=pdf

https://en.wikipedia.org/wiki/Intelligent_agent

https://en.wikipedia.org/wiki/Multi-agent_system


Q1
----------------------------
1. Break question into 1-, 2- and 3-grams
2. Search each n-gram in question. Assign points to each match
3. Search each n-gram on answer. Assign points to each match
4. Return the question with the highest match


Q2
----------------------------

1. The meta-agent is given the results of all student-agents performance on problem sets Basic, Test (and Challenge and Ravens, if available) B, C, D and E.
2. The meta-agent is then run against the actual Raven's test


1. Basic, Test (and Challenge and Ravens, if available) B, C, D and E will be treated as the training set
2. Extract features from the training set RPMs
3. Run each of the agents for each problem in the training set
4. Collect results
5. Create a table of features of each RPM and which agent solved it best.

The table in step 5 will be the result of training of the meta-agent with the training set

Once the new problems are received:
1. Extract the features of each problem
2. Compare with the feature set in the table and select the feature which matches closest with the new problem feature
3. Get the agent which performed the best for that feature set
4. Run that agent.

Examples of what kind of features to extract:
1. Images in A to H
2. Objects in each image
3. Count of each type of object in each image
3. Pixel counts of objects in each image
4. Set of objects in each row/column. Ex: first row contains square, circle and diamond
5. Fill types of objects in each row/column. Ex: first row contains a filled object, unfilled object and one filled + unfilled object

Conditions on which agents are selected:
*. If set of objects + fill is same in each row
*. If set of objects is same in each row
*. If objects are same in each row

Learning by Correcting Mistakes can be applied to learn about new types of RPMs
